version: '3'

services:
  traefik:
    image: traefik:v2.8
    restart: unless-stopped
    command: 
      - "--accesslog=true"
      - "--providers.docker"
      - "--api.dashboard=true"
      - "--experimental.http3=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
      - "--entrypoints.web.http.redirections.entrypoint.permanent=true"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.websecure.http.tls=true"
      - "--entrypoints.websecure.http.tls.certresolver=letsencrypt"
      - "--entrypoints.websecure.http3.advertisedPort=443"
      - "--certificatesresolvers.letsencrypt.acme.email=${ACME_EMAIL}"
      - "--certificatesresolvers.letsencrypt.acme.storage=/data/acme.json"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web"

    ports:
      - "80:80/tcp"
      - "443:443/tcp"
      - "443:443/udp"

    labels:
      traefik.http.routers.traefik.rule: Host(`traefik.fsn1.<REDACTED>`)
      traefik.http.routers.traefik.middlewares: github-auth
      traefik.http.routers.traefik.service: api@internal

    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "traefik_data:/data"

  oauth2-proxy:
    image: quay.io/oauth2-proxy/oauth2-proxy:v7.3.0
    restart: unless-stopped
    command:
      - "--client-id=${OAUTH_CLIENT_ID}"
      - "--client-secret=${OAUTH_CLIENT_SECRET}"
      - "--cookie-domain=.<REDACTED>"
      - "--cookie-name=_auth_9668c2cf"
      - "--cookie-secret=${OAUTH_COOKIE_SECRET}"
      - "--email-domain=<REDACTED>"
      - "--github-org=kttr-io"
      - "--http-address=http://[::]:4180"
      - "--provider=github"
      - "--reverse-proxy=true"
      - "--redirect-url=https://auth.fsn1.<REDACTED>/oauth2/callback"
      - "--scope=user:email"
      - "--set-xauthrequest=true"
      - "--upstream=static://202"
      - "--whitelist-domain=.<REDACTED>"
      - "--whitelist-domain=.fsn1.<REDACTED>"
    
    expose:
      - '4180'

    labels:
      traefik.http.routers.oauth2-proxy.rule: Host(`auth.fsn1.<REDACTED>`) || PathPrefix(`/oauth2`)
      traefik.http.routers.oauth2-proxy.middlewares: auth-headers
      traefik.http.routers.oauth2-proxy.tls: 'true'
      traefik.http.routers.oauth2-proxy.tls.certresolver: letsencrypt
      
      traefik.http.middlewares.auth-headers.headers.sslRedirect: 'true'
      traefik.http.middlewares.auth-headers.headers.stsSeconds: '315360000'
      traefik.http.middlewares.auth-headers.headers.browserXssFilter: 'true'
      traefik.http.middlewares.auth-headers.headers.contentTypeNosniff: 'true'
      traefik.http.middlewares.auth-headers.headers.forceSTSHeader: 'true'
      traefik.http.middlewares.auth-headers.headers.sslHost: auth.fsn1.<REDACTED>
      traefik.http.middlewares.auth-headers.headers.stsIncludeSubdomains: 'true'
      traefik.http.middlewares.auth-headers.headers.stsPreload: 'true'
      traefik.http.middlewares.auth-headers.headers.frameDeny: 'true'
      
      traefik.http.middlewares.github-auth.forwardAuth.address: http://oauth2-proxy:4180/
      traefik.http.middlewares.github-auth.forwardAuth.trustForwardHeader: 'true'
      traefik.http.middlewares.github-auth.forwardAuth.authResponseHeaders: X-Auth-Request-User,X-Auth-Request-Email,X-Auth-Request-Access-Token,Authorization

  httpbin:
    image: kennethreitz/httpbin
    restart: unless-stopped
    labels:
      traefik.http.routers.httpbin.rule: Host(`httpbin.fsn1.<REDACTED>`)
      traefik.http.routers.httpbin.middlewares: github-auth

volumes:
  traefik_data:
