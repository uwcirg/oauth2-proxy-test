version: '3.9'

x-orig:
  traefik:
    image: traefik:v2.8
    restart: unless-stopped
    command: 
      - "--accesslog=true"
      - "--providers.docker"
      - "--api.dashboard=true"
      - "--experimental.http3=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
      - "--entrypoints.web.http.redirections.entrypoint.permanent=true"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.websecure.http.tls=true"
      - "--entrypoints.websecure.http.tls.certresolver=letsencrypt"
      - "--entrypoints.websecure.http3.advertisedPort=443"
      - "--certificatesresolvers.letsencrypt.acme.email=${ACME_EMAIL}"
      - "--certificatesresolvers.letsencrypt.acme.storage=/data/acme.json"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web"

    ports:
      - "80:80/tcp"
      - "443:443/tcp"
      - "443:443/udp"

    labels:
      traefik.http.routers.traefik.rule: Host(`traefik.fsn1.<REDACTED>`)
      traefik.http.routers.traefik.middlewares: github-auth
      traefik.http.routers.traefik.service: api@internal

    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "traefik_data:/data"
services:

  oauth2-proxy:
    image: quay.io/oauth2-proxy/oauth2-proxy:v7.3.0
    restart: unless-stopped
    command:
      # - "--client-id=${OAUTH_CLIENT_ID}"
      # - "--client-secret=${OAUTH_CLIENT_SECRET}"
      # - "--cookie-domain=.nip.io"
      # - "--cookie-name=_auth_9668c2cf"
      # - "--cookie-secret=${OAUTH_COOKIE_SECRET}"
      # - "--email-domain=*"
      # - "--http-address=http://[::]:4180"
      # - "--reverse-proxy=true"
      # - "--redirect-url=https://auth.fsn1.<REDACTED>/oauth2/callback"
      # - "--scope=user:email"
      # - "--set-xauthrequest=true"
      - "--upstream=static://202"
      # - "--whitelist-domain=.<REDACTED>"
      # - "--whitelist-domain=.fsn1.<REDACTED>"
      - "--skip-jwt-bearer-tokens=true"
    environment:
      OAUTH2_PROXY_HTTP_ADDRESS: 0.0.0.0:4180
      OAUTH2_PROXY_PROVIDER: oidc
      OAUTH2_PROXY_PROVIDER_DISPLAY_NAME: Keeycloak
      OAUTH2_PROXY_OIDC_ISSUER_URL: https://keycloak.${IP:-128.208.230.197}.nip.io/auth/realms/fEMR
      OAUTH2_PROXY_EMAIL_DOMAINS: "*"
      OAUTH2_PROXY_INSECURE_OIDC_ALLOW_UNVERIFIED_EMAIL: "true"
      OAUTH2_PROXY_USER_ID_CLAIM: "preferred_username"
      OAUTH2_PROXY_SCOPE: openid profile email
      OAUTH2_PROXY_COOKIE_DOMAINS: .${IP:-128.208.230.197}.nip.io
      OAUTH2_PROXY_WHITELIST_DOMAINS: .${IP:-128.208.230.197}.nip.io
      OAUTH2_PROXY_PASS_AUTHORIZATION_HEADER: "true"
      OAUTH2_PROXY_PASS_ACCESS_TOKEN: "true"
      OAUTH2_PROXY_PASS_USER_HEADERS: "true"
      OAUTH2_PROXY_SET_AUTHORIZATION_HEADER: "true"
      OAUTH2_PROXY_SET_XAUTHREQUEST: "true"
      OAUTH2_PROXY_COOKIE_REFRESH: 1m
      OAUTH2_PROXY_COOKIE_EXPIRE: 30m
      OAUTH2_PROXY_COOKIE_SECRET: OQINaROshtE9TcZkNAm-5Zs2Pv3xaWytBmc5W7sPX7w=
      # OAUTH2_PROXY_REDIRECT_URL: http://auth-proxy-${COMPOSE_PROJECT_NAME}:4180/oauth2/callback
      # OAUTH2_PROXY_REDIRECT_URL: http://oauth:4180/oauth2/callback
      # OAUTH2_PROXY_REDIRECT_URL: https://${SERVER_NAME}/oauth2/callback
      OAUTH2_PROXY_REDIRECT_URL: https://oauth2-proxy.${IP:-128.208.230.197}.nip.io/oauth2/callback
      OAUTH2_PROXY_CLIENT_ID: auth_proxy_test
      OAUTH2_PROXY_CLIENT_SECRET: 74c6fdc4-4086-4a21-bf40-49c7ee74357e
      OAUTH2_PROXY_REVERSE_PROXY: "true"
    expose:
      - '4180'

    labels:
      "traefik.enable": "true"
      traefik.http.routers.oauth2-proxy.rule: Host(`oauth2-proxy.${IP:-128.208.230.197}.nip.io`) || PathPrefix(`/oauth2`)
      traefik.http.routers.oauth2-proxy.middlewares: auth-headers
      traefik.http.routers.oauth2-proxy.tls: 'true'
      traefik.http.routers.oauth2-proxy.tls.certresolver: letsencrypt
      traefik.http.routers.oauth2-proxy.entrypoints: "websecure"
      
      traefik.http.middlewares.auth-headers.headers.sslRedirect: 'true'
      traefik.http.middlewares.auth-headers.headers.stsSeconds: '315360000'
      traefik.http.middlewares.auth-headers.headers.browserXssFilter: 'true'
      traefik.http.middlewares.auth-headers.headers.contentTypeNosniff: 'true'
      traefik.http.middlewares.auth-headers.headers.forceSTSHeader: 'true'
      traefik.http.middlewares.auth-headers.headers.sslHost: oauth2-proxy.${IP:-128.208.230.197}.nip.io
      traefik.http.middlewares.auth-headers.headers.stsIncludeSubdomains: 'true'
      traefik.http.middlewares.auth-headers.headers.stsPreload: 'true'
      traefik.http.middlewares.auth-headers.headers.frameDeny: 'true'
      
      traefik.http.middlewares.github-auth.forwardAuth.address: http://oauth2-proxy:4180/
      traefik.http.middlewares.github-auth.forwardAuth.trustForwardHeader: 'true'
      traefik.http.middlewares.github-auth.forwardAuth.authResponseHeaders: X-Auth-Request-User,X-Auth-Request-Email,X-Auth-Request-Access-Token,Authorization
    networks:
      ingress:
      internal:

  whoami:
    image: "containous/whoami"
    labels:
      "traefik.enable": "true"
      traefik.http.routers.whoami.rule: Host(`whoami.${IP:-128.208.230.197}.nip.io`)
      traefik.http.routers.whoami.middlewares: github-auth
      "traefik.http.services.whoami.loadbalancer.server.port": "80"
      "traefik.http.routers.whoami.entrypoints": "websecure"
      "traefik.http.routers.whoami.tls": "true"
    networks:
      ingress:
      internal:
####


  postgrest:
    image: postgrest/postgrest
    environment:
      PGRST_DB_URI: postgres://app_user:secret@postgres:5432/app_db
      PGRST_DB_SCHEMA: api
      PGRST_DB_ANON_ROLE: web_anon
      PGRST_JWT_SECRET: ${PGRST_JWT_SECRET}
    depends_on:
      - postgres
    labels:
      "traefik.enable": "true"
      "traefik.http.routers.postgrest.rule": "Host(`postgrest.${IP:-128.208.230.197}.nip.io`)"
      "traefik.http.routers.postgrest.entrypoints": "websecure"
      "traefik.http.routers.postgrest.tls": "true"
      traefik.http.routers.postgrest.middlewares: github-auth
      "traefik.http.services.postgrest.loadbalancer.server.port": "3000"
    networks:
      ingress:
      internal:
    ports:
      - 3000:3000

  postgres:
    image: postgres:${POSTGRES_IMAGE_TAG:-12}
    restart: unless-stopped
    environment:
      POSTGRES_DB: app_db
      POSTGRES_USER: app_user
      POSTGRES_PASSWORD: secret
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./sql/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      # ingress:
      internal:

  keycloak:
    image: jboss/keycloak:${KEYCLOAK_IMAGE_TAG:-15.0.2}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.keycloak-${COMPOSE_PROJECT_NAME}.rule=Host(`keycloak.${IP:-128.208.230.197}`)"
      - "traefik.http.routers.keycloak-${COMPOSE_PROJECT_NAME}.entrypoints=websecure"
      - "traefik.http.routers.keycloak-${COMPOSE_PROJECT_NAME}.tls=true"
      - "traefik.http.routers.keycloak-${COMPOSE_PROJECT_NAME}.tls.certresolver=letsencrypt"
    environment:
      KEYCLOAK_FRONTEND_URL: "https://keycloak.${IP:-128.208.230.197}/auth"
      PROXY_ADDRESS_FORWARDING: "true"
      DB_VENDOR: postgres
      DB_ADDR: postgres
      DB_PORT: 5432
      DB_DATABASE: keycloak
      DB_USER: app_user
      DB_PASSWORD: secret
      # https://nvd.nist.gov/vuln/detail/CVE-2021-44228
      LOG4J_FORMAT_MSG_NO_LOOKUPS: "true"
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: admin

    depends_on:
      - postgres
    networks:
      - ingress
      - internal

volumes:
  postgres-data: {}





networks:
  # internal network for backing services
  internal:



  # ingress network
  ingress:
    name: external_web
    # external: "true"
    external: true
